// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id           String        @id @default(cuid())
  name         String
  email        String        @unique
  password     String
  roleId       String
  role         Role          @relation(fields: [roleId], references: [id])
  appointments Appointment[]
  messages     Message[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model Role {
  id        String   @id @default(cuid())
  name      String   @unique
  users     User[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Service {
  id           String        @id @default(cuid())
  name         String
  description  String?
  price        Float
  duration     Int
  appointments Appointment[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model Appointment {
  id        String    @id @default(cuid())
  date      DateTime
  status    String    @default("PENDING")
  userId    String
  user      User      @relation(fields: [userId], references: [id])
  serviceId String
  service   Service   @relation(fields: [serviceId], references: [id])
  messages  Message[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Message {
  id            String      @id @default(cuid())
  content       String
  userId        String
  user          User        @relation(fields: [userId], references: [id])
  appointmentId String
  appointment   Appointment @relation(fields: [appointmentId], references: [id])
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}
